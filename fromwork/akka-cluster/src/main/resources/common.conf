akka {
  # with ActorLogging
  # default logs to System.out
  loggers = ["akka.event.Logging$DefaultLogger"]

  # Akka confi gured loggers use this loglevel
  loglevel = "INFO"

  stdout-loglevel = "INFO"

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    #serializers {
     # proto = "akka.remote.serialization.ProtobufSerializer"
    #}
    #serialization-bindings {
      # 禁用Java序列化
     # "java.io.Serializable" = none
    #}
    default-dispatcher {
      throughtput = 1
    }

    # 确保确认节点处于正常工作状态的消息能够被优先处理
    # 单独配置线程以使这些消息总是能获得线程
    akka.cluster.use-dispatcher = cluster-dispatcher
    cluster-dispatcher {
      type = "Dispatcher"
      executor = "fork-join-executor"
      fork-join-executor {
        parallelism-min = 1
        parallelism-max = 2
      }
    }
  }

  remote {
    log-remote-lifecycle-events = off
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "0.0.0.0"
      port = 0
    }
    log-sent-messages = on
    log-received-messages = on
  }
}