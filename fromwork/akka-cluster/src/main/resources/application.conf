# all in: https://doc.akka.io/docs/akka/current/cluster-usage.html?language=scala

include "common.conf"

akka {
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    serializers {
      proto = "akka.remote.serialization.ProtobufSerializer"
    }
    serialization-bindings {
      # 禁用Java序列化
      "java.io.Serializable" = none
    }
    default-dispatcher {
      throughtput = 1
    }

    # 确保确认节点处于正常工作状态的消息能够被优先处理
    # 单独配置线程以使这些消息总是能获得线程
    akka.cluster.use-dispatcher = cluster-dispatcher
    cluster-dispatcher {
      type = "Dispatcher"
      executor = "fork-join-executor"
      fork-join-executor {
        parallelism-min = 1
        parallelism-max = 2
      }
    }
  }

  remote {
    log-remote-lifecycle-events = off
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "127.0.0.1"
      port = 6767
    }
    log-sent-messages = on
    log-received-messages = on
  }

  cluster {
    # 种子节点 gossip协议...
    #seed-nodes = [
    # "akka.tcp://ClusterSystem@127.0.0.1:6767",
    #"akka.tcp://ClusterSystem@127.0.0.1:7676"
    #]

    # 通过编码的形式确定种子节点
    seed-nodes = []

    # auto downing is NOT safe for production deployments.
    # you may want to use it during development, read more about it in the docs.
    #
    # auto-down-unreachable-after = 10s
  }

}